class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
nums = [-10, -3, 0, 5, 9]
left, right = 0, len(nums) - 1
stack = []
def build_balanced_bst(left, right):
    if left > right:
        return None
    mid = (left + right) // 2
    root = TreeNode(nums[mid])
    root.left = build_balanced_bst(left, mid - 1)
    root.right = build_balanced_bst(mid + 1, right)
    return root
root = build_balanced_bst(left, right)
def print_inorder(node):
    if node:
        print_inorder(node.left)
        print(node.val, end=" ")
        print_inorder(node.right)
print_inorder(root)  
